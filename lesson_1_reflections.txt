1.- How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Diff command is a tool that I can use to quickly identify differences between two files. This way I can use diff command to look for bugs easily in the places were changes were detected and where is likely to find them.

2.- How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having the entire history of a file will help me as a programmer to not lose my work, to have access to previous code and remember previous ideas, understand changes on my code, compare versions and look for bugs easily.

3.- What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: It is flexible, I can choose what and when to commit in a specific time point.
	Cons: Propense to forget committing and save versions of your file in a meaningful way.

4.- Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Version control systems like Git are focus on content related to coding, so it is more likely to have several files that integrate a project. Since the files are related to each other it makes sense to have multiple file tracking. For example, changes in a file might affect other files. On the other hand, version control systems like Google Docs work with single documents and are focus on keeping versions of single files.

5.- How can you use the commands git log and git diff to view the history of files?

    git log command shows a list of the commits of a file. It displays the most recent commits first. It gives commits info like: commit ID, author, email, date and comments.
	git diff command compares two commits and shows the differences between those commits. It specifies the deletes and inserts that were made between the two versions.

6.- How might using version control make you more confident to make changes that
could break something?

    Using version control ensures us to have access to previous versions, so it is possible to restore a version that we knew was working and identify a version where a bug was created.

7.- Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git in all my projects and improve my coding process.
